import type { TaskListErrors, YesOrNoWithDetail } from '@approved-premises/ui'
import type { Application } from '@approved-premises/api'
import { Page } from '../../../utils/decorators'

import TasklistPage from '../../../tasklistPage'
import { yesOrNoResponseWithDetail } from '../../../utils'

export const questionKeys = ['exploitable', 'exploitOthers'] as const

type QuestionKeys = typeof questionKeys[number]

type VulnerabilityDetail = YesOrNoWithDetail<'exploitable'> & YesOrNoWithDetail<'exploitOthers'>

@Page({
  name: 'vulnerability',
  bodyProperties: ['exploitable', 'exploitableDetail', 'exploitOthers', 'exploitOthersDetail'],
})
export default class Vulnerability implements TasklistPage {
  name = 'vulnerability'

  title = 'Vulnerability'

  questionSubjects = {
    exploitable: 'you are',
    exploitOthers: 'there is',
  }

  questionPredicates = {
    exploitable: `aware that ${this.application.person.name} is vulnerable to exploitation from others`,
    exploitOthers: `any evidence or expectation that ${this.application.person.name} may groom, radicalise or exploit others`,
  }

  questions = {
    exploitable: `Are you ${this.questionPredicates.exploitable}?`,
    exploitOthers: `Is there ${this.questionPredicates.exploitOthers}?`,
  }

  constructor(public body: Partial<VulnerabilityDetail>, private readonly application: Application) {}

  previous() {
    return 'room-sharing'
  }

  next() {
    return 'previous-placements'
  }

  response() {
    const response = {}

    questionKeys.forEach((k: QuestionKeys) => {
      response[this.questions[k]] = yesOrNoResponseWithDetail<QuestionKeys>(k, this.body)
    })

    return response
  }

  errors() {
    const errors: TaskListErrors<this> = {}

    questionKeys.forEach((question: string) => {
      if (!this.body[question]) {
        errors[question] = `You must specify if ${this.questionSubjects[question]} ${this.questionPredicates[question]}`
      }

      if (this.body[question] === 'yes' && !this.body[`${question}Detail`]) {
        errors[
          `${question}Detail`
        ] = `You must specify details about if ${this.questionSubjects[question]} ${this.questionPredicates[question]}`
      }
    })

    return errors
  }
}
